openapi: 3.0.1
info:
  description: '"Use these endpoints for interacting with Blog Posts, Blog Authors,
    and Blog Tags"'
  title: Blog Post endpoints
  version: v3
servers:
- url: https://api.hubapi.com/
tags:
- name: Author
paths:
  /cms/v3/blogs/authors:
    get:
      description: |
        Get the list of blog authors. Supports paging and filtering. This method would be useful for an integration that examined these models and used an external service to suggest edits.
      operationId: get-/cms/v3/blogs/authors_getPage
      parameters:
      - description: Only return Blog Authors created at exactly the specified time.
        explode: true
        in: query
        name: createdAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return Blog Authors created after the specified time.
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return Blog Authors created before the specified time.
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return Blog Authors last updated at exactly the specified
          time.
        explode: true
        in: query
        name: updatedAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return Blog Authors last updated after the specified time.
        explode: true
        in: query
        name: updatedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return Blog Authors last updated before the specified time.
        explode: true
        in: query
        name: updatedBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Specifies which fields to use for sorting results. Valid fields
          are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt`
          will be used by default.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor token value to get the next set of results. You can
          get this from the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return. Default is 100.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Specifies whether to return archived Blog Authors. Defaults to
          `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseWithTotalBlogAuthorForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - content
      summary: Get all Blog Authors
      tags:
      - Author
    post:
      description: Create a new Blog Author.
      operationId: post-/cms/v3/blogs/authors_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        description: The JSON representation of a new Blog Author.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - content
      summary: Create a new Blog Author
      tags:
      - Author
  /cms/v3/blogs/authors/batch/archive:
    post:
      description: |-
        Delete the Blog Author objects identified in the request body.
        Note: This is not the same as the in-app `archive` function.
      operationId: post-/cms/v3/blogs/authors/batch/archive_archiveBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputString'
        description: The JSON array of Blog Author ids.
        required: true
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - content
      summary: Archive a batch of Blog Authors
      tags:
      - Author
  /cms/v3/blogs/authors/batch/create:
    post:
      description: Create the Blog Author objects detailed in the request body.
      operationId: post-/cms/v3/blogs/authors/batch/create_createBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputBlogAuthor'
        description: The JSON array of new Blog Authors to create.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseBlogAuthor'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseBlogAuthorWithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - content
      summary: Create a batch of Blog Authors
      tags:
      - Author
  /cms/v3/blogs/authors/batch/read:
    post:
      description: Retrieve the Blog Author objects identified in the request body.
      operationId: post-/cms/v3/blogs/authors/batch/read_readBatch
      parameters:
      - description: Specifies whether to return archived Blog Authors. Defaults to
          `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputString'
        description: The JSON array of Blog Author ids.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseBlogAuthor'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseBlogAuthorWithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - content
      summary: Retrieve a batch of Blog Authors
      tags:
      - Author
  /cms/v3/blogs/authors/batch/update:
    post:
      description: Update the Blog Author objects identified in the request body.
      operationId: post-/cms/v3/blogs/authors/batch/update_updateBatch
      parameters:
      - description: Specifies whether to update archived Blog Authors. Defaults to
          `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputJsonNode'
        description: A JSON array of the JSON representations of the updated Blog
          Authors.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseBlogAuthor'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseBlogAuthorWithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - content
      summary: Update a batch of Blog Authors
      tags:
      - Author
  /cms/v3/blogs/authors/{objectId}:
    delete:
      description: Delete the Blog Author object identified by the id in the path.
      operationId: delete-/cms/v3/blogs/authors/{objectId}_archive
      parameters:
      - description: The Blog Author id.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to return only results that have been archived.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - content
      summary: Delete a Blog Author
      tags:
      - Author
    get:
      description: Retrieve the Blog Author object identified by the id in the path.
      operationId: get-/cms/v3/blogs/authors/{objectId}_getById
      parameters:
      - description: The Blog Author id.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies whether to return archived Blog Authors. Defaults to
          `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - content
      summary: Retrieve a Blog Author
      tags:
      - Author
    patch:
      description: |
        Sparse updates a single Blog Author object identified by the id in the path.
        All the column values need not be specified. Only the that need to be modified can be specified.
      operationId: patch-/cms/v3/blogs/authors/{objectId}_update
      parameters:
      - description: The Blog Author id.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies whether to update archived Blog Authors. Defaults to
          `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        description: The JSON representation of the updated Blog Author.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - content
      summary: Update a Blog Author
      tags:
      - Author
components:
  responses:
    Error:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: An error occurred.
  schemas:
    BatchInputBlogAuthor:
      example:
        inputs:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          website: website
          twitter: twitter
          deletedAt: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          facebook: facebook
          bio: bio
          id: id
          linkedin: linkedin
          avatar: avatar
          email: email
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          website: website
          twitter: twitter
          deletedAt: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          facebook: facebook
          bio: bio
          id: id
          linkedin: linkedin
          avatar: avatar
          email: email
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/BlogAuthor'
          type: array
      required:
      - inputs
      type: object
    BatchInputJsonNode:
      example:
        inputs:
        - '{}'
        - '{}'
      properties:
        inputs:
          items:
            properties: {}
            type: object
          type: array
      required:
      - inputs
      type: object
    BatchInputString:
      example:
        inputs:
        - inputs
        - inputs
      properties:
        inputs:
          items:
            type: string
          type: array
      required:
      - inputs
      type: object
    BatchResponseBlogAuthor:
      type: object
    BatchResponseBlogAuthorWithErrors:
      properties:
        status:
          enum:
          - PENDING
          - PROCESSING
          - CANCELED
          - COMPLETE
          type: string
        results:
          items:
            $ref: '#/components/schemas/BlogAuthor'
          type: array
        numErrors:
          format: int32
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/StandardError'
          type: array
        requestedAt:
          format: date-time
          type: string
        startedAt:
          format: date-time
          type: string
        completedAt:
          format: date-time
          type: string
        links:
          additionalProperties:
            type: string
          type: object
      required:
      - completedAt
      - results
      - startedAt
      - status
      type: object
    BlogAuthor:
      description: Model definition for a Blog Author.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        website: website
        twitter: twitter
        deletedAt: 2000-01-23T04:56:07.000+00:00
        displayName: displayName
        facebook: facebook
        bio: bio
        id: id
        linkedin: linkedin
        avatar: avatar
        email: email
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The unique ID of the Blog Author.
          type: string
        email:
          description: Email address of the Blog Author.
          type: string
        bio:
          description: A short biography of the blog author.
          type: string
        website:
          description: URL to the website of the Blog Author.
          type: string
        twitter:
          description: URL or username of the Twitter account associated with the
            Blog Author. This will be normalized into the Twitter url for said user.
          type: string
        facebook:
          description: URL to the Blog Author's Facebook page.
          type: string
        linkedin:
          description: URL to the blog author's LinkedIn page.
          type: string
        avatar:
          description: URL to the blog author's avatar, if supplying a custom one.
          type: string
        displayName:
          description: The full name of the Blog Author to be displayed.
          type: string
        deletedAt:
          description: The timestamp (ISO8601 format) when this Blog Author was deleted.
          format: date-time
          type: string
        createdAt:
          description: The timestamp (ISO8601 format) when this Blog Author was created.
          format: date-time
          type: string
        updatedAt:
          description: The timestamp (ISO8601 format) when this Blog Author was last
            updated.
          format: date-time
          type: string
      required:
      - avatar
      - bio
      - createdAt
      - deletedAt
      - displayName
      - email
      - facebook
      - id
      - linkedin
      - twitter
      - updatedAt
      - website
      type: object
    CollectionResponseWithTotalBlogAuthorForwardPaging:
      example:
        total: 0
        paging:
          next:
            link: link
            after: after
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          website: website
          twitter: twitter
          deletedAt: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          facebook: facebook
          bio: bio
          id: id
          linkedin: linkedin
          avatar: avatar
          email: email
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          website: website
          twitter: twitter
          deletedAt: 2000-01-23T04:56:07.000+00:00
          displayName: displayName
          facebook: facebook
          bio: bio
          id: id
          linkedin: linkedin
          avatar: avatar
          email: email
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        total:
          format: int32
          type: integer
        results:
          items:
            $ref: '#/components/schemas/BlogAuthor'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardPaging'
      required:
      - results
      - total
      type: object
    Error:
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: An error occurred
          type: string
        correlationId:
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        category:
          description: The error category
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        errors:
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            invalidPropertyName:
            - propertyValue
            missingScopes:
            - scope1
            - scope2
          type: object
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          type: object
      required:
      - category
      - correlationId
      - message
      type: object
    ErrorCategory:
      type: object
    ErrorDetail:
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          type: string
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        code:
          description: The status code associated with the error detail
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
          type: object
      required:
      - message
      type: object
    ForwardPaging:
      example:
        next:
          link: link
          after: after
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
      type: object
    NextPage:
      example:
        link: link
        after: after
      properties:
        after:
          type: string
        link:
          type: string
      required:
      - after
      type: object
    StandardError:
      properties:
        status:
          type: string
        id:
          type: string
        category:
          type: object
        subCategory:
          properties: {}
          type: object
        message:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        context:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        links:
          additionalProperties:
            type: string
          type: object
      required:
      - category
      - context
      - errors
      - links
      - message
      - status
      type: object
  securitySchemes:
    oauth2_legacy:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            content: Read from and write to my Content
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    hapikey:
      in: query
      name: hapikey
      type: apiKey
x-hubspot-available-client-libraries:
- PHP
- Node
- Python
- Ruby
