/*
CMS Site Search

Use these endpoints for searching content on your HubSpot hosted CMS website(s).

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package site_search

import (
	"encoding/json"
)

// SearchHitField struct for SearchHitField
type SearchHitField struct {
	MetadataField bool                     `json:"metadataField"`
	Values        []map[string]interface{} `json:"values"`
	Name          string                   `json:"name"`
	Value         map[string]interface{}   `json:"value"`
}

// NewSearchHitField instantiates a new SearchHitField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchHitField(metadataField bool, values []map[string]interface{}, name string, value map[string]interface{}) *SearchHitField {
	this := SearchHitField{}
	this.MetadataField = metadataField
	this.Values = values
	this.Name = name
	this.Value = value
	return &this
}

// NewSearchHitFieldWithDefaults instantiates a new SearchHitField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchHitFieldWithDefaults() *SearchHitField {
	this := SearchHitField{}
	return &this
}

// GetMetadataField returns the MetadataField field value
func (o *SearchHitField) GetMetadataField() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MetadataField
}

// GetMetadataFieldOk returns a tuple with the MetadataField field value
// and a boolean to check if the value has been set.
func (o *SearchHitField) GetMetadataFieldOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetadataField, true
}

// SetMetadataField sets field value
func (o *SearchHitField) SetMetadataField(v bool) {
	o.MetadataField = v
}

// GetValues returns the Values field value
func (o *SearchHitField) GetValues() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *SearchHitField) GetValuesOk() (*[]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *SearchHitField) SetValues(v []map[string]interface{}) {
	o.Values = v
}

// GetName returns the Name field value
func (o *SearchHitField) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SearchHitField) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SearchHitField) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *SearchHitField) GetValue() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SearchHitField) GetValueOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SearchHitField) SetValue(v map[string]interface{}) {
	o.Value = v
}

func (o SearchHitField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["metadataField"] = o.MetadataField
	}
	if true {
		toSerialize["values"] = o.Values
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableSearchHitField struct {
	value *SearchHitField
	isSet bool
}

func (v NullableSearchHitField) Get() *SearchHitField {
	return v.value
}

func (v *NullableSearchHitField) Set(val *SearchHitField) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchHitField) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchHitField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchHitField(val *SearchHitField) *NullableSearchHitField {
	return &NullableSearchHitField{value: val, isSet: true}
}

func (v NullableSearchHitField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchHitField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
