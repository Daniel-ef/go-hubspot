/*
Transactional Email

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package transactional

import (
	"encoding/json"
)

// CollectionResponseSmtpApiTokenView A collection of SMTP API tokens.
type CollectionResponseSmtpApiTokenView struct {
	// The actual collection of tokens.
	Results []SmtpApiTokenView `json:"results"`
	Paging  *Paging            `json:"paging,omitempty"`
}

// NewCollectionResponseSmtpApiTokenView instantiates a new CollectionResponseSmtpApiTokenView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionResponseSmtpApiTokenView(results []SmtpApiTokenView) *CollectionResponseSmtpApiTokenView {
	this := CollectionResponseSmtpApiTokenView{}
	this.Results = results
	return &this
}

// NewCollectionResponseSmtpApiTokenViewWithDefaults instantiates a new CollectionResponseSmtpApiTokenView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionResponseSmtpApiTokenViewWithDefaults() *CollectionResponseSmtpApiTokenView {
	this := CollectionResponseSmtpApiTokenView{}
	return &this
}

// GetResults returns the Results field value
func (o *CollectionResponseSmtpApiTokenView) GetResults() []SmtpApiTokenView {
	if o == nil {
		var ret []SmtpApiTokenView
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *CollectionResponseSmtpApiTokenView) GetResultsOk() (*[]SmtpApiTokenView, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Results, true
}

// SetResults sets field value
func (o *CollectionResponseSmtpApiTokenView) SetResults(v []SmtpApiTokenView) {
	o.Results = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *CollectionResponseSmtpApiTokenView) GetPaging() Paging {
	if o == nil || o.Paging == nil {
		var ret Paging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionResponseSmtpApiTokenView) GetPagingOk() (*Paging, bool) {
	if o == nil || o.Paging == nil {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *CollectionResponseSmtpApiTokenView) HasPaging() bool {
	if o != nil && o.Paging != nil {
		return true
	}

	return false
}

// SetPaging gets a reference to the given Paging and assigns it to the Paging field.
func (o *CollectionResponseSmtpApiTokenView) SetPaging(v Paging) {
	o.Paging = &v
}

func (o CollectionResponseSmtpApiTokenView) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["results"] = o.Results
	}
	if o.Paging != nil {
		toSerialize["paging"] = o.Paging
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionResponseSmtpApiTokenView struct {
	value *CollectionResponseSmtpApiTokenView
	isSet bool
}

func (v NullableCollectionResponseSmtpApiTokenView) Get() *CollectionResponseSmtpApiTokenView {
	return v.value
}

func (v *NullableCollectionResponseSmtpApiTokenView) Set(val *CollectionResponseSmtpApiTokenView) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionResponseSmtpApiTokenView) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionResponseSmtpApiTokenView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionResponseSmtpApiTokenView(val *CollectionResponseSmtpApiTokenView) *NullableCollectionResponseSmtpApiTokenView {
	return &NullableCollectionResponseSmtpApiTokenView{value: val, isSet: true}
}

func (v NullableCollectionResponseSmtpApiTokenView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionResponseSmtpApiTokenView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
