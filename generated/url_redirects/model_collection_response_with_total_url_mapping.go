/*
URL redirects

URL redirect operations

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package url_redirects

import (
	"encoding/json"
)

// CollectionResponseWithTotalUrlMapping struct for CollectionResponseWithTotalUrlMapping
type CollectionResponseWithTotalUrlMapping struct {
	// The number of available results.
	Total int32 `json:"total"`
	// Matched URLs.
	Results []UrlMapping `json:"results"`
	Paging  *Paging      `json:"paging,omitempty"`
}

// NewCollectionResponseWithTotalUrlMapping instantiates a new CollectionResponseWithTotalUrlMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionResponseWithTotalUrlMapping(total int32, results []UrlMapping) *CollectionResponseWithTotalUrlMapping {
	this := CollectionResponseWithTotalUrlMapping{}
	this.Total = total
	this.Results = results
	return &this
}

// NewCollectionResponseWithTotalUrlMappingWithDefaults instantiates a new CollectionResponseWithTotalUrlMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionResponseWithTotalUrlMappingWithDefaults() *CollectionResponseWithTotalUrlMapping {
	this := CollectionResponseWithTotalUrlMapping{}
	return &this
}

// GetTotal returns the Total field value
func (o *CollectionResponseWithTotalUrlMapping) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *CollectionResponseWithTotalUrlMapping) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *CollectionResponseWithTotalUrlMapping) SetTotal(v int32) {
	o.Total = v
}

// GetResults returns the Results field value
func (o *CollectionResponseWithTotalUrlMapping) GetResults() []UrlMapping {
	if o == nil {
		var ret []UrlMapping
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *CollectionResponseWithTotalUrlMapping) GetResultsOk() (*[]UrlMapping, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Results, true
}

// SetResults sets field value
func (o *CollectionResponseWithTotalUrlMapping) SetResults(v []UrlMapping) {
	o.Results = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *CollectionResponseWithTotalUrlMapping) GetPaging() Paging {
	if o == nil || o.Paging == nil {
		var ret Paging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionResponseWithTotalUrlMapping) GetPagingOk() (*Paging, bool) {
	if o == nil || o.Paging == nil {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *CollectionResponseWithTotalUrlMapping) HasPaging() bool {
	if o != nil && o.Paging != nil {
		return true
	}

	return false
}

// SetPaging gets a reference to the given Paging and assigns it to the Paging field.
func (o *CollectionResponseWithTotalUrlMapping) SetPaging(v Paging) {
	o.Paging = &v
}

func (o CollectionResponseWithTotalUrlMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["results"] = o.Results
	}
	if o.Paging != nil {
		toSerialize["paging"] = o.Paging
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionResponseWithTotalUrlMapping struct {
	value *CollectionResponseWithTotalUrlMapping
	isSet bool
}

func (v NullableCollectionResponseWithTotalUrlMapping) Get() *CollectionResponseWithTotalUrlMapping {
	return v.value
}

func (v *NullableCollectionResponseWithTotalUrlMapping) Set(val *CollectionResponseWithTotalUrlMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionResponseWithTotalUrlMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionResponseWithTotalUrlMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionResponseWithTotalUrlMapping(val *CollectionResponseWithTotalUrlMapping) *NullableCollectionResponseWithTotalUrlMapping {
	return &NullableCollectionResponseWithTotalUrlMapping{value: val, isSet: true}
}

func (v NullableCollectionResponseWithTotalUrlMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionResponseWithTotalUrlMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
