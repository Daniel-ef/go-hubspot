/*
URL redirects

URL redirect operations

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package url_redirects

import (
	"encoding/json"
)

// UrlMapping struct for UrlMapping
type UrlMapping struct {
	// The unique ID of this URL redirect.
	Id          int64 `json:"id"`
	PortalId    int32 `json:"portalId"`
	Created     int64 `json:"created"`
	Updated     int64 `json:"updated"`
	CreatedById int32 `json:"createdById"`
	UpdatedById int32 `json:"updatedById"`
	// The target incoming URL, path, or pattern to match for redirection.
	RoutePrefix string `json:"routePrefix"`
	// The destination URL, where the target URL should be redirected if it matches the `routePrefix`.
	Destination string `json:"destination"`
	// The type of redirect to create. Options include: 301 (permanent), 302 (temporary), or 305 (proxy). Find more details [here](https://knowledge.hubspot.com/cos-general/how-to-redirect-a-hubspot-page).
	RedirectStyle  int32 `json:"redirectStyle"`
	ContentGroupId int64 `json:"contentGroupId"`
	// Whether the URL redirect mapping should apply only if a live page on the URL isn't found. If False, the URL redirect mapping will take precedence over any existing page.
	IsOnlyAfterNotFound bool `json:"isOnlyAfterNotFound"`
	IsRegex             bool `json:"isRegex"`
	// Whether the `routePrefix` should match on the entire URL, including the domain.
	IsMatchFullUrl bool `json:"isMatchFullUrl"`
	// Whether the `routePrefix` should match on the entire URL path, including the query string.
	IsMatchQueryString bool `json:"isMatchQueryString"`
	// Whether the `routePrefix` should match based on pattern.
	IsPattern bool `json:"isPattern"`
	// Whether a trailing slash will be ignored.
	IsTrailingSlashOptional bool `json:"isTrailingSlashOptional"`
	// Whether the `routePrefix` should match both HTTP and HTTPS protocols.
	IsProtocolAgnostic bool   `json:"isProtocolAgnostic"`
	Name               string `json:"name"`
	// Used to prioritize URL redirection. If a given URL matches more than one redirect, the one with the **lower** precedence will be used.
	Precedence          int32  `json:"precedence"`
	DeletedAt           int64  `json:"deletedAt"`
	Note                string `json:"note"`
	Label               string `json:"label"`
	InternallyCreated   bool   `json:"internallyCreated"`
	CosObjectType       string `json:"cosObjectType"`
	CdnPurgeEmbargoTime int64  `json:"cdnPurgeEmbargoTime"`
}

// NewUrlMapping instantiates a new UrlMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUrlMapping(id int64, portalId int32, created int64, updated int64, createdById int32, updatedById int32, routePrefix string, destination string, redirectStyle int32, contentGroupId int64, isOnlyAfterNotFound bool, isRegex bool, isMatchFullUrl bool, isMatchQueryString bool, isPattern bool, isTrailingSlashOptional bool, isProtocolAgnostic bool, name string, precedence int32, deletedAt int64, note string, label string, internallyCreated bool, cosObjectType string, cdnPurgeEmbargoTime int64) *UrlMapping {
	this := UrlMapping{}
	this.Id = id
	this.PortalId = portalId
	this.Created = created
	this.Updated = updated
	this.CreatedById = createdById
	this.UpdatedById = updatedById
	this.RoutePrefix = routePrefix
	this.Destination = destination
	this.RedirectStyle = redirectStyle
	this.ContentGroupId = contentGroupId
	this.IsOnlyAfterNotFound = isOnlyAfterNotFound
	this.IsRegex = isRegex
	this.IsMatchFullUrl = isMatchFullUrl
	this.IsMatchQueryString = isMatchQueryString
	this.IsPattern = isPattern
	this.IsTrailingSlashOptional = isTrailingSlashOptional
	this.IsProtocolAgnostic = isProtocolAgnostic
	this.Name = name
	this.Precedence = precedence
	this.DeletedAt = deletedAt
	this.Note = note
	this.Label = label
	this.InternallyCreated = internallyCreated
	this.CosObjectType = cosObjectType
	this.CdnPurgeEmbargoTime = cdnPurgeEmbargoTime
	return &this
}

// NewUrlMappingWithDefaults instantiates a new UrlMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUrlMappingWithDefaults() *UrlMapping {
	this := UrlMapping{}
	return &this
}

// GetId returns the Id field value
func (o *UrlMapping) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UrlMapping) SetId(v int64) {
	o.Id = v
}

// GetPortalId returns the PortalId field value
func (o *UrlMapping) GetPortalId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PortalId
}

// GetPortalIdOk returns a tuple with the PortalId field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetPortalIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortalId, true
}

// SetPortalId sets field value
func (o *UrlMapping) SetPortalId(v int32) {
	o.PortalId = v
}

// GetCreated returns the Created field value
func (o *UrlMapping) GetCreated() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetCreatedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *UrlMapping) SetCreated(v int64) {
	o.Created = v
}

// GetUpdated returns the Updated field value
func (o *UrlMapping) GetUpdated() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetUpdatedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *UrlMapping) SetUpdated(v int64) {
	o.Updated = v
}

// GetCreatedById returns the CreatedById field value
func (o *UrlMapping) GetCreatedById() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetCreatedByIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *UrlMapping) SetCreatedById(v int32) {
	o.CreatedById = v
}

// GetUpdatedById returns the UpdatedById field value
func (o *UrlMapping) GetUpdatedById() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedById
}

// GetUpdatedByIdOk returns a tuple with the UpdatedById field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetUpdatedByIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedById, true
}

// SetUpdatedById sets field value
func (o *UrlMapping) SetUpdatedById(v int32) {
	o.UpdatedById = v
}

// GetRoutePrefix returns the RoutePrefix field value
func (o *UrlMapping) GetRoutePrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoutePrefix
}

// GetRoutePrefixOk returns a tuple with the RoutePrefix field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetRoutePrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RoutePrefix, true
}

// SetRoutePrefix sets field value
func (o *UrlMapping) SetRoutePrefix(v string) {
	o.RoutePrefix = v
}

// GetDestination returns the Destination field value
func (o *UrlMapping) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *UrlMapping) SetDestination(v string) {
	o.Destination = v
}

// GetRedirectStyle returns the RedirectStyle field value
func (o *UrlMapping) GetRedirectStyle() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RedirectStyle
}

// GetRedirectStyleOk returns a tuple with the RedirectStyle field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetRedirectStyleOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectStyle, true
}

// SetRedirectStyle sets field value
func (o *UrlMapping) SetRedirectStyle(v int32) {
	o.RedirectStyle = v
}

// GetContentGroupId returns the ContentGroupId field value
func (o *UrlMapping) GetContentGroupId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ContentGroupId
}

// GetContentGroupIdOk returns a tuple with the ContentGroupId field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetContentGroupIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentGroupId, true
}

// SetContentGroupId sets field value
func (o *UrlMapping) SetContentGroupId(v int64) {
	o.ContentGroupId = v
}

// GetIsOnlyAfterNotFound returns the IsOnlyAfterNotFound field value
func (o *UrlMapping) GetIsOnlyAfterNotFound() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOnlyAfterNotFound
}

// GetIsOnlyAfterNotFoundOk returns a tuple with the IsOnlyAfterNotFound field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetIsOnlyAfterNotFoundOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOnlyAfterNotFound, true
}

// SetIsOnlyAfterNotFound sets field value
func (o *UrlMapping) SetIsOnlyAfterNotFound(v bool) {
	o.IsOnlyAfterNotFound = v
}

// GetIsRegex returns the IsRegex field value
func (o *UrlMapping) GetIsRegex() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRegex
}

// GetIsRegexOk returns a tuple with the IsRegex field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetIsRegexOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRegex, true
}

// SetIsRegex sets field value
func (o *UrlMapping) SetIsRegex(v bool) {
	o.IsRegex = v
}

// GetIsMatchFullUrl returns the IsMatchFullUrl field value
func (o *UrlMapping) GetIsMatchFullUrl() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMatchFullUrl
}

// GetIsMatchFullUrlOk returns a tuple with the IsMatchFullUrl field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetIsMatchFullUrlOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsMatchFullUrl, true
}

// SetIsMatchFullUrl sets field value
func (o *UrlMapping) SetIsMatchFullUrl(v bool) {
	o.IsMatchFullUrl = v
}

// GetIsMatchQueryString returns the IsMatchQueryString field value
func (o *UrlMapping) GetIsMatchQueryString() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMatchQueryString
}

// GetIsMatchQueryStringOk returns a tuple with the IsMatchQueryString field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetIsMatchQueryStringOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsMatchQueryString, true
}

// SetIsMatchQueryString sets field value
func (o *UrlMapping) SetIsMatchQueryString(v bool) {
	o.IsMatchQueryString = v
}

// GetIsPattern returns the IsPattern field value
func (o *UrlMapping) GetIsPattern() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPattern
}

// GetIsPatternOk returns a tuple with the IsPattern field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetIsPatternOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPattern, true
}

// SetIsPattern sets field value
func (o *UrlMapping) SetIsPattern(v bool) {
	o.IsPattern = v
}

// GetIsTrailingSlashOptional returns the IsTrailingSlashOptional field value
func (o *UrlMapping) GetIsTrailingSlashOptional() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsTrailingSlashOptional
}

// GetIsTrailingSlashOptionalOk returns a tuple with the IsTrailingSlashOptional field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetIsTrailingSlashOptionalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsTrailingSlashOptional, true
}

// SetIsTrailingSlashOptional sets field value
func (o *UrlMapping) SetIsTrailingSlashOptional(v bool) {
	o.IsTrailingSlashOptional = v
}

// GetIsProtocolAgnostic returns the IsProtocolAgnostic field value
func (o *UrlMapping) GetIsProtocolAgnostic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsProtocolAgnostic
}

// GetIsProtocolAgnosticOk returns a tuple with the IsProtocolAgnostic field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetIsProtocolAgnosticOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsProtocolAgnostic, true
}

// SetIsProtocolAgnostic sets field value
func (o *UrlMapping) SetIsProtocolAgnostic(v bool) {
	o.IsProtocolAgnostic = v
}

// GetName returns the Name field value
func (o *UrlMapping) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UrlMapping) SetName(v string) {
	o.Name = v
}

// GetPrecedence returns the Precedence field value
func (o *UrlMapping) GetPrecedence() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Precedence
}

// GetPrecedenceOk returns a tuple with the Precedence field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetPrecedenceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Precedence, true
}

// SetPrecedence sets field value
func (o *UrlMapping) SetPrecedence(v int32) {
	o.Precedence = v
}

// GetDeletedAt returns the DeletedAt field value
func (o *UrlMapping) GetDeletedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetDeletedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedAt, true
}

// SetDeletedAt sets field value
func (o *UrlMapping) SetDeletedAt(v int64) {
	o.DeletedAt = v
}

// GetNote returns the Note field value
func (o *UrlMapping) GetNote() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Note
}

// GetNoteOk returns a tuple with the Note field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Note, true
}

// SetNote sets field value
func (o *UrlMapping) SetNote(v string) {
	o.Note = v
}

// GetLabel returns the Label field value
func (o *UrlMapping) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *UrlMapping) SetLabel(v string) {
	o.Label = v
}

// GetInternallyCreated returns the InternallyCreated field value
func (o *UrlMapping) GetInternallyCreated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.InternallyCreated
}

// GetInternallyCreatedOk returns a tuple with the InternallyCreated field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetInternallyCreatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InternallyCreated, true
}

// SetInternallyCreated sets field value
func (o *UrlMapping) SetInternallyCreated(v bool) {
	o.InternallyCreated = v
}

// GetCosObjectType returns the CosObjectType field value
func (o *UrlMapping) GetCosObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CosObjectType
}

// GetCosObjectTypeOk returns a tuple with the CosObjectType field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetCosObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CosObjectType, true
}

// SetCosObjectType sets field value
func (o *UrlMapping) SetCosObjectType(v string) {
	o.CosObjectType = v
}

// GetCdnPurgeEmbargoTime returns the CdnPurgeEmbargoTime field value
func (o *UrlMapping) GetCdnPurgeEmbargoTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CdnPurgeEmbargoTime
}

// GetCdnPurgeEmbargoTimeOk returns a tuple with the CdnPurgeEmbargoTime field value
// and a boolean to check if the value has been set.
func (o *UrlMapping) GetCdnPurgeEmbargoTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CdnPurgeEmbargoTime, true
}

// SetCdnPurgeEmbargoTime sets field value
func (o *UrlMapping) SetCdnPurgeEmbargoTime(v int64) {
	o.CdnPurgeEmbargoTime = v
}

func (o UrlMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["portalId"] = o.PortalId
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["updated"] = o.Updated
	}
	if true {
		toSerialize["createdById"] = o.CreatedById
	}
	if true {
		toSerialize["updatedById"] = o.UpdatedById
	}
	if true {
		toSerialize["routePrefix"] = o.RoutePrefix
	}
	if true {
		toSerialize["destination"] = o.Destination
	}
	if true {
		toSerialize["redirectStyle"] = o.RedirectStyle
	}
	if true {
		toSerialize["contentGroupId"] = o.ContentGroupId
	}
	if true {
		toSerialize["isOnlyAfterNotFound"] = o.IsOnlyAfterNotFound
	}
	if true {
		toSerialize["isRegex"] = o.IsRegex
	}
	if true {
		toSerialize["isMatchFullUrl"] = o.IsMatchFullUrl
	}
	if true {
		toSerialize["isMatchQueryString"] = o.IsMatchQueryString
	}
	if true {
		toSerialize["isPattern"] = o.IsPattern
	}
	if true {
		toSerialize["isTrailingSlashOptional"] = o.IsTrailingSlashOptional
	}
	if true {
		toSerialize["isProtocolAgnostic"] = o.IsProtocolAgnostic
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["precedence"] = o.Precedence
	}
	if true {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if true {
		toSerialize["note"] = o.Note
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["internallyCreated"] = o.InternallyCreated
	}
	if true {
		toSerialize["cosObjectType"] = o.CosObjectType
	}
	if true {
		toSerialize["cdnPurgeEmbargoTime"] = o.CdnPurgeEmbargoTime
	}
	return json.Marshal(toSerialize)
}

type NullableUrlMapping struct {
	value *UrlMapping
	isSet bool
}

func (v NullableUrlMapping) Get() *UrlMapping {
	return v.value
}

func (v *NullableUrlMapping) Set(val *UrlMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableUrlMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableUrlMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUrlMapping(val *UrlMapping) *NullableUrlMapping {
	return &NullableUrlMapping{value: val, isSet: true}
}

func (v NullableUrlMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUrlMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
