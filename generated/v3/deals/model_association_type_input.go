/*
Deals

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deals

import (
	"encoding/json"
)

// AssociationTypeInput struct for AssociationTypeInput
type AssociationTypeInput struct {
	AssociationCategory string `json:"associationCategory"`
	AssociationTypeId   int64  `json:"associationTypeId"`
}

// NewAssociationTypeInput instantiates a new AssociationTypeInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssociationTypeInput(associationCategory string, associationTypeId int64) *AssociationTypeInput {
	this := AssociationTypeInput{}
	this.AssociationCategory = associationCategory
	this.AssociationTypeId = associationTypeId
	return &this
}

// NewAssociationTypeInputWithDefaults instantiates a new AssociationTypeInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssociationTypeInputWithDefaults() *AssociationTypeInput {
	this := AssociationTypeInput{}
	return &this
}

// GetAssociationCategory returns the AssociationCategory field value
func (o *AssociationTypeInput) GetAssociationCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssociationCategory
}

// GetAssociationCategoryOk returns a tuple with the AssociationCategory field value
// and a boolean to check if the value has been set.
func (o *AssociationTypeInput) GetAssociationCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssociationCategory, true
}

// SetAssociationCategory sets field value
func (o *AssociationTypeInput) SetAssociationCategory(v string) {
	o.AssociationCategory = v
}

// GetAssociationTypeId returns the AssociationTypeId field value
func (o *AssociationTypeInput) GetAssociationTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AssociationTypeId
}

// GetAssociationTypeIdOk returns a tuple with the AssociationTypeId field value
// and a boolean to check if the value has been set.
func (o *AssociationTypeInput) GetAssociationTypeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssociationTypeId, true
}

// SetAssociationTypeId sets field value
func (o *AssociationTypeInput) SetAssociationTypeId(v int64) {
	o.AssociationTypeId = v
}

func (o AssociationTypeInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["associationCategory"] = o.AssociationCategory
	}
	if true {
		toSerialize["associationTypeId"] = o.AssociationTypeId
	}
	return json.Marshal(toSerialize)
}

type NullableAssociationTypeInput struct {
	value *AssociationTypeInput
	isSet bool
}

func (v NullableAssociationTypeInput) Get() *AssociationTypeInput {
	return v.value
}

func (v *NullableAssociationTypeInput) Set(val *AssociationTypeInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAssociationTypeInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAssociationTypeInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssociationTypeInput(val *AssociationTypeInput) *NullableAssociationTypeInput {
	return &NullableAssociationTypeInput{value: val, isSet: true}
}

func (v NullableAssociationTypeInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssociationTypeInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
